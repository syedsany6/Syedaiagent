{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "A2A Protocol Schema with Knowledge Graph Collaboration",
  "description": "JSON Schema for A2A Protocol, extended with Knowledge Graph query, update, and subscription features supporting GraphQL.",
  "$defs": {
    "AgentAuthentication": {
      "properties": {
        "schemes": {
          "items": {
            "type": "string"
          },
          "title": "Schemes",
          "type": "array"
        },
        "credentials": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Credentials"
        }
      },
      "required": [
        "schemes"
      ],
      "title": "AgentAuthentication",
      "type": "object"
    },
    "AgentCapabilities": {
      "properties": {
        "streaming": {
          "default": false,
          "title": "Streaming",
          "description": "Indicates if the agent supports streaming responses (e.g., tasks/sendSubscribe, knowledge/subscribe).",
          "type": "boolean"
        },
        "pushNotifications": {
          "default": false,
          "title": "PushNotifications",
          "description": "Indicates if the agent supports server-sent push notifications for task updates.",
          "type": "boolean"
        },
        "stateTransitionHistory": {
          "default": false,
          "title": "Statetransitionhistory",
          "description": "Indicates if the agent tracks and provides task state transition history.",
          "type": "boolean"
        },
        "knowledgeGraph": {
          "default": false,
          "title": "KnowledgeGraph",
          "description": "Indicates if the agent supports the knowledge graph collaboration methods (knowledge/query, knowledge/update, knowledge/subscribe).",
          "type": "boolean"
        },
        "knowledgeGraphQueryLanguages": {
          "items": {
            "type": "string",
            "enum": [
              "graphql",
              "sparql"
            ]
          },
          "title": "KnowledgeGraphQueryLanguages",
          "description": "List of query languages supported for knowledge graph interactions (e.g., 'graphql', 'sparql').",
          "type": "array",
          "default": []
        }
      },
      "title": "AgentCapabilities",
      "type": "object"
    },
    "AgentCard": {
      "properties": {
        "name": {
          "title": "Name",
          "type": "string"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Description"
        },
        "url": {
          "title": "Url",
          "description": "The endpoint URL for the agent's A2A service.",
          "type": "string"
        },
        "provider": {
          "anyOf": [
            {
              "$ref": "#/$defs/AgentProvider"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "version": {
          "title": "Version",
          "type": "string"
        },
        "documentationUrl": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Documentationurl"
        },
        "capabilities": {
          "$ref": "#/$defs/AgentCapabilities"
        },
        "authentication": {
          "anyOf": [
            {
              "$ref": "#/$defs/AgentAuthentication"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "defaultInputModes": {
          "default": [
            "text"
          ],
          "items": {
            "type": "string"
          },
          "title": "Defaultinputmodes",
          "type": "array"
        },
        "defaultOutputModes": {
          "default": [
            "text"
          ],
          "items": {
            "type": "string"
          },
          "title": "Defaultoutputmodes",
          "type": "array"
        },
        "skills": {
          "items": {
            "$ref": "#/$defs/AgentSkill"
          },
          "title": "Skills",
          "type": "array"
        }
      },
      "required": [
        "name",
        "url",
        "version",
        "capabilities",
        "skills"
      ],
      "title": "AgentCard",
      "type": "object"
    },
    "AgentProvider": {
      "properties": {
        "organization": {
          "title": "Organization",
          "type": "string"
        },
        "url": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Url"
        }
      },
      "required": [
        "organization"
      ],
      "title": "AgentProvider",
      "type": "object"
    },
    "AgentSkill": {
      "properties": {
        "id": {
          "title": "Id",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "type": "string"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Description"
        },
        "tags": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tags"
        },
        "examples": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Examples"
        },
        "inputModes": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Inputmodes"
        },
        "outputModes": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Outputmodes"
        }
      },
      "required": [
        "id",
        "name"
      ],
      "title": "AgentSkill",
      "type": "object"
    },
    "Artifact": {
      "properties": {
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Name"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Description"
        },
        "parts": {
          "items": {
            "$ref": "#/$defs/Part"
          },
          "title": "Parts",
          "type": "array"
        },
        "index": {
          "type": "integer",
          "default": 0,
          "title": "Index"
        },
        "append": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Append"
        },
        "lastChunk": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "LastChunk"
        },
        "metadata": {
          "anyOf": [
            {
              "additionalProperties": {},
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Metadata"
        }
      },
      "required": [
        "parts"
      ],
      "title": "Artifact",
      "type": "object"
    },
    "AuthenticationInfo": {
      "additionalProperties": {},
      "properties": {
        "schemes": {
          "items": {
            "type": "string"
          },
          "title": "Schemes",
          "type": "array"
        },
        "credentials": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Credentials"
        }
      },
      "required": [
        "schemes"
      ],
      "title": "AuthenticationInfo",
      "type": "object"
    },
    "PushNotificationNotSupportedError": {
      "properties": {
        "code": {
          "const": -32003,
          "default": -32003,
          "description": "Error code",
          "examples": [
            -32003
          ],
          "title": "Code",
          "type": "integer"
        },
        "message": {
          "const": "Push Notification is not supported",
          "default": "Push Notification is not supported",
          "description": "A short description of the error",
          "examples": [
            "Push Notification is not supported"
          ],
          "title": "Message",
          "type": "string"
        },
        "data": {
          "const": null,
          "default": null,
          "title": "Data"
        }
      },
      "required": [
        "code",
        "message",
        "data"
      ],
      "title": "PushNotificationNotSupportedError",
      "type": "object"
    },
    "CancelTaskRequest": {
      "properties": {
        "jsonrpc": {
          "const": "2.0",
          "default": "2.0",
          "title": "Jsonrpc",
          "type": "string"
        },
        "id": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Id"
        },
        "method": {
          "const": "tasks/cancel",
          "default": "tasks/cancel",
          "title": "Method",
          "type": "string"
        },
        "params": {
          "$ref": "#/$defs/TaskIdParams"
        }
      },
      "required": [
        "jsonrpc",
        "method",
        "params"
      ],
      "title": "CancelTaskRequest",
      "type": "object"
    },
    "CancelTaskResponse": {
      "properties": {
        "jsonrpc": {
          "const": "2.0",
          "default": "2.0",
          "title": "Jsonrpc",
          "type": "string"
        },
        "id": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Id"
        },
        "result": {
          "anyOf": [
            {
              "$ref": "#/$defs/Task"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "error": {
          "anyOf": [
            {
              "$ref": "#/$defs/JSONRPCError"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "required": [
        "jsonrpc"
      ],
      "title": "CancelTaskResponse",
      "type": "object"
    },
    "DataPart": {
      "properties": {
        "type": {
          "const": "data",
          "default": "data",
          "description": "Type of the part",
          "examples": [
            "data"
          ],
          "title": "Type",
          "type": "string"
        },
        "data": {
          "additionalProperties": {},
          "title": "Data",
          "type": "object"
        },
        "metadata": {
          "anyOf": [
            {
              "additionalProperties": {},
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Metadata"
        }
      },
      "required": [
        "type",
        "data"
      ],
      "title": "DataPart",
      "type": "object"
    },
    "FileContent": {
      "properties": {
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Name"
        },
        "mimeType": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Mimetype"
        },
        "bytes": {
          "anyOf": [
            {
              "type": "string",
              "contentEncoding": "base64"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Bytes",
          "description": "Base64 encoded file content."
        },
        "uri": {
          "anyOf": [
            {
              "type": "string",
              "format": "uri"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Uri",
          "description": "URI pointing to the file content."
        }
      },
      "title": "FileContent",
      "type": "object",
      "description": "Represents the content of a file, either as base64 encoded bytes or a URI.\n\nEnsures that either 'bytes' or 'uri' is provided, but not both (enforced by application logic based on Pydantic validator)."
    },
    "FilePart": {
      "properties": {
        "type": {
          "const": "file",
          "default": "file",
          "description": "Type of the part",
          "examples": [
            "file"
          ],
          "title": "Type",
          "type": "string"
        },
        "file": {
          "$ref": "#/$defs/FileContent"
        },
        "metadata": {
          "anyOf": [
            {
              "additionalProperties": {},
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Metadata"
        }
      },
      "required": [
        "type",
        "file"
      ],
      "title": "FilePart",
      "type": "object"
    },
    "GetTaskPushNotificationRequest": {
      "properties": {
        "jsonrpc": {
          "const": "2.0",
          "default": "2.0",
          "title": "Jsonrpc",
          "type": "string"
        },
        "id": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Id"
        },
        "method": {
          "const": "tasks/pushNotification/get",
          "default": "tasks/pushNotification/get",
          "title": "Method",
          "type": "string"
        },
        "params": {
          "$ref": "#/$defs/TaskIdParams"
        }
      },
      "required": [
        "jsonrpc",
        "method",
        "params"
      ],
      "title": "GetTaskPushNotificationRequest",
      "type": "object"
    },
    "GetTaskPushNotificationResponse": {
      "properties": {
        "jsonrpc": {
          "const": "2.0",
          "default": "2.0",
          "title": "Jsonrpc",
          "type": "string"
        },
        "id": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Id"
        },
        "result": {
          "anyOf": [
            {
              "$ref": "#/$defs/TaskPushNotificationConfig"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "error": {
          "anyOf": [
            {
              "$ref": "#/$defs/JSONRPCError"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "required": [
        "jsonrpc"
      ],
      "title": "GetTaskPushNotificationResponse",
      "type": "object"
    },
    "GetTaskRequest": {
      "properties": {
        "jsonrpc": {
          "const": "2.0",
          "default": "2.0",
          "title": "Jsonrpc",
          "type": "string"
        },
        "id": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Id"
        },
        "method": {
          "const": "tasks/get",
          "default": "tasks/get",
          "title": "Method",
          "type": "string"
        },
        "params": {
          "$ref": "#/$defs/TaskQueryParams"
        }
      },
      "required": [
        "jsonrpc",
        "method",
        "params"
      ],
      "title": "GetTaskRequest",
      "type": "object"
    },
    "GetTaskResponse": {
      "properties": {
        "jsonrpc": {
          "const": "2.0",
          "default": "2.0",
          "title": "Jsonrpc",
          "type": "string"
        },
        "id": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Id"
        },
        "result": {
          "anyOf": [
            {
              "$ref": "#/$defs/Task"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "error": {
          "anyOf": [
            {
              "$ref": "#/$defs/JSONRPCError"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "required": [
        "jsonrpc"
      ],
      "title": "GetTaskResponse",
      "type": "object"
    },
    "InternalError": {
      "properties": {
        "code": {
          "const": -32603,
          "default": -32603,
          "description": "Error code",
          "examples": [
            -32603
          ],
          "title": "Code",
          "type": "integer"
        },
        "message": {
          "const": "Internal error",
          "default": "Internal error",
          "description": "A short description of the error",
          "examples": [
            "Internal error"
          ],
          "title": "Message",
          "type": "string"
        },
        "data": {
          "anyOf": [
            {
              "additionalProperties": {},
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Data"
        }
      },
      "required": [
        "code",
        "message"
      ],
      "title": "InternalError",
      "type": "object"
    },
    "InvalidParamsError": {
      "properties": {
        "code": {
          "const": -32602,
          "default": -32602,
          "description": "Error code",
          "examples": [
            -32602
          ],
          "title": "Code",
          "type": "integer"
        },
        "message": {
          "const": "Invalid parameters",
          "default": "Invalid parameters",
          "description": "A short description of the error",
          "examples": [
            "Invalid parameters"
          ],
          "title": "Message",
          "type": "string"
        },
        "data": {
          "anyOf": [
            {
              "additionalProperties": {},
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Data"
        }
      },
      "required": [
        "code",
        "message"
      ],
      "title": "InvalidParamsError",
      "type": "object"
    },
    "InvalidRequestError": {
      "properties": {
        "code": {
          "const": -32600,
          "default": -32600,
          "description": "Error code",
          "examples": [
            -32600
          ],
          "title": "Code",
          "type": "integer"
        },
        "message": {
          "const": "Request payload validation error",
          "default": "Request payload validation error",
          "description": "A short description of the error",
          "examples": [
            "Request payload validation error"
          ],
          "title": "Message",
          "type": "string"
        },
        "data": {
          "anyOf": [
            {
              "additionalProperties": {},
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Data"
        }
      },
      "required": [
        "code",
        "message"
      ],
      "title": "InvalidRequestError",
      "type": "object"
    },
    "JSONParseError": {
      "properties": {
        "code": {
          "const": -32700,
          "default": -32700,
          "description": "Error code",
          "examples": [
            -32700
          ],
          "title": "Code",
          "type": "integer"
        },
        "message": {
          "const": "Invalid JSON payload",
          "default": "Invalid JSON payload",
          "description": "A short description of the error",
          "examples": [
            "Invalid JSON payload"
          ],
          "title": "Message",
          "type": "string"
        },
        "data": {
          "anyOf": [
            {
              "additionalProperties": {},
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Data"
        }
      },
      "required": [
        "code",
        "message"
      ],
      "title": "JSONParseError",
      "type": "object"
    },
    "JSONRPCError": {
      "properties": {
        "code": {
          "title": "Code",
          "type": "integer"
        },
        "message": {
          "title": "Message",
          "type": "string"
        },
        "data": {
          "anyOf": [
            {
              "additionalProperties": {},
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Data"
        }
      },
      "required": [
        "code",
        "message"
      ],
      "title": "JSONRPCError",
      "type": "object"
    },
    "JSONRPCMessage": {
      "properties": {
        "jsonrpc": {
          "const": "2.0",
          "default": "2.0",
          "title": "Jsonrpc",
          "type": "string"
        },
        "id": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Id"
        }
      },
      "title": "JSONRPCMessage",
      "type": "object"
    },
    "JSONRPCRequest": {
      "properties": {
        "jsonrpc": {
          "const": "2.0",
          "default": "2.0",
          "title": "Jsonrpc",
          "type": "string"
        },
        "id": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Id"
        },
        "method": {
          "title": "Method",
          "type": "string"
        },
        "params": {
          "anyOf": [
            {
              "additionalProperties": {},
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Params"
        }
      },
      "required": [
        "jsonrpc",
        "method"
      ],
      "title": "JSONRPCRequest",
      "type": "object"
    },
    "JSONRPCResponse": {
      "properties": {
        "jsonrpc": {
          "const": "2.0",
          "default": "2.0",
          "title": "Jsonrpc",
          "type": "string"
        },
        "id": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Id"
        },
        "result": {
          "anyOf": [
            {
              "additionalProperties": {},
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Result"
        },
        "error": {
          "anyOf": [
            {
              "$ref": "#/$defs/JSONRPCError"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "required": [
        "jsonrpc"
      ],
      "title": "JSONRPCResponse",
      "type": "object"
    },
    "Message": {
      "properties": {
        "role": {
          "enum": [
            "user",
            "agent"
          ],
          "title": "Role",
          "type": "string"
        },
        "parts": {
          "items": {
            "$ref": "#/$defs/Part"
          },
          "title": "Parts",
          "type": "array"
        },
        "metadata": {
          "anyOf": [
            {
              "additionalProperties": {},
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Metadata"
        }
      },
      "required": [
        "role",
        "parts"
      ],
      "title": "Message",
      "type": "object"
    },
    "MethodNotFoundError": {
      "properties": {
        "code": {
          "const": -32601,
          "default": -32601,
          "description": "Error code",
          "examples": [
            -32601
          ],
          "title": "Code",
          "type": "integer"
        },
        "message": {
          "const": "Method not found",
          "default": "Method not found",
          "description": "A short description of the error",
          "examples": [
            "Method not found"
          ],
          "title": "Message",
          "type": "string"
        },
        "data": {
          "const": null,
          "default": null,
          "title": "Data"
        }
      },
      "required": [
        "code",
        "message",
        "data"
      ],
      "title": "MethodNotFoundError",
      "type": "object"
    },
    "PushNotificationConfig": {
      "properties": {
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri"
        },
        "token": {
          "title": "Token",
          "description": "Optional opaque token for simple authorization.",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "authentication": {
          "anyOf": [
            {
              "$ref": "#/$defs/AuthenticationInfo"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "required": [
        "url"
      ],
      "title": "PushNotificationConfig",
      "type": "object"
    },
    "Part": {
      "oneOf": [
        {
          "$ref": "#/$defs/TextPart"
        },
        {
          "$ref": "#/$defs/FilePart"
        },
        {
          "$ref": "#/$defs/DataPart"
        }
      ],
      "title": "Part",
      "description": "Represents a distinct piece of content within a Message or Artifact. Use 'type' field to discriminate.",
      "discriminator": {
        "propertyName": "type"
      }
    },
    "SendTaskRequest": {
      "properties": {
        "jsonrpc": {
          "const": "2.0",
          "default": "2.0",
          "title": "Jsonrpc",
          "type": "string"
        },
        "id": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Id"
        },
        "method": {
          "const": "tasks/send",
          "default": "tasks/send",
          "title": "Method",
          "type": "string"
        },
        "params": {
          "$ref": "#/$defs/TaskSendParams"
        }
      },
      "required": [
        "jsonrpc",
        "method",
        "params"
      ],
      "title": "SendTaskRequest",
      "type": "object"
    },
    "SendTaskResponse": {
      "properties": {
        "jsonrpc": {
          "const": "2.0",
          "default": "2.0",
          "title": "Jsonrpc",
          "type": "string"
        },
        "id": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Id"
        },
        "result": {
          "anyOf": [
            {
              "$ref": "#/$defs/Task"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "error": {
          "anyOf": [
            {
              "$ref": "#/$defs/JSONRPCError"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "required": [
        "jsonrpc"
      ],
      "title": "SendTaskResponse",
      "type": "object"
    },
    "SendTaskStreamingRequest": {
      "properties": {
        "jsonrpc": {
          "const": "2.0",
          "default": "2.0",
          "title": "Jsonrpc",
          "type": "string"
        },
        "id": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Id"
        },
        "method": {
          "const": "tasks/sendSubscribe",
          "default": "tasks/sendSubscribe",
          "title": "Method",
          "type": "string"
        },
        "params": {
          "$ref": "#/$defs/TaskSendParams"
        }
      },
      "required": [
        "jsonrpc",
        "method",
        "params"
      ],
      "title": "SendTaskStreamingRequest",
      "type": "object"
    },
    "SendTaskStreamingResponse": {
      "properties": {
        "jsonrpc": {
          "const": "2.0",
          "default": "2.0",
          "title": "Jsonrpc",
          "type": "string"
        },
        "id": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Id"
        },
        "result": {
          "oneOf": [
            {
              "$ref": "#/$defs/TaskStatusUpdateEvent"
            },
            {
              "$ref": "#/$defs/TaskArtifactUpdateEvent"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "error": {
          "anyOf": [
            {
              "$ref": "#/$defs/JSONRPCError"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "required": [
        "jsonrpc"
      ],
      "title": "SendTaskStreamingResponse",
      "type": "object"
    },
    "SetTaskPushNotificationRequest": {
      "properties": {
        "jsonrpc": {
          "const": "2.0",
          "default": "2.0",
          "title": "Jsonrpc",
          "type": "string"
        },
        "id": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Id"
        },
        "method": {
          "const": "tasks/pushNotification/set",
          "default": "tasks/pushNotification/set",
          "title": "Method",
          "type": "string"
        },
        "params": {
          "$ref": "#/$defs/TaskPushNotificationConfig"
        }
      },
      "required": [
        "jsonrpc",
        "method",
        "params"
      ],
      "title": "SetTaskPushNotificationRequest",
      "type": "object"
    },
    "SetTaskPushNotificationResponse": {
      "properties": {
        "jsonrpc": {
          "const": "2.0",
          "default": "2.0",
          "title": "Jsonrpc",
          "type": "string"
        },
        "id": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Id"
        },
        "result": {
          "anyOf": [
            {
              "$ref": "#/$defs/TaskPushNotificationConfig"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "error": {
          "anyOf": [
            {
              "$ref": "#/$defs/JSONRPCError"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "required": [
        "jsonrpc"
      ],
      "title": "SetTaskPushNotificationResponse",
      "type": "object"
    },
    "Task": {
      "properties": {
        "id": {
          "title": "Id",
          "type": "string"
        },
        "sessionId": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Sessionid"
        },
        "status": {
          "$ref": "#/$defs/TaskStatus"
        },
        "artifacts": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Artifact"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Artifacts"
        },
        "history": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Message"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "History"
        },
        "metadata": {
          "anyOf": [
            {
              "additionalProperties": {},
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Metadata"
        }
      },
      "required": [
        "id",
        "status"
      ],
      "title": "Task",
      "type": "object"
    },
    "TaskPushNotificationConfig": {
      "properties": {
        "id": {
          "title": "Id",
          "type": "string"
        },
        "pushNotificationConfig": {
          "$ref": "#/$defs/PushNotificationConfig"
        }
      },
      "required": [
        "id",
        "pushNotificationConfig"
      ],
      "title": "TaskPushNotificationConfig",
      "type": "object"
    },
    "TaskNotCancelableError": {
      "properties": {
        "code": {
          "const": -32002,
          "default": -32002,
          "description": "Error code",
          "examples": [
            -32002
          ],
          "title": "Code",
          "type": "integer"
        },
        "message": {
          "const": "Task cannot be canceled",
          "default": "Task cannot be canceled",
          "description": "A short description of the error",
          "examples": [
            "Task cannot be canceled"
          ],
          "title": "Message",
          "type": "string"
        },
        "data": {
          "const": null,
          "default": null,
          "title": "Data"
        }
      },
      "required": [
        "code",
        "message",
        "data"
      ],
      "title": "TaskNotCancelableError",
      "type": "object"
    },
    "TaskNotFoundError": {
      "properties": {
        "code": {
          "const": -32001,
          "default": -32001,
          "description": "Error code",
          "examples": [
            -32001
          ],
          "title": "Code",
          "type": "integer"
        },
        "message": {
          "const": "Task not found",
          "default": "Task not found",
          "description": "A short description of the error",
          "examples": [
            "Task not found"
          ],
          "title": "Message",
          "type": "string"
        },
        "data": {
          "const": null,
          "default": null,
          "title": "Data"
        }
      },
      "required": [
        "code",
        "message",
        "data"
      ],
      "title": "TaskNotFoundError",
      "type": "object"
    },
    "TaskIdParams": {
      "properties": {
        "id": {
          "title": "Id",
          "type": "string"
        },
        "metadata": {
          "anyOf": [
            {
              "additionalProperties": {},
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Metadata"
        }
      },
      "required": [
        "id"
      ],
      "title": "TaskIdParams",
      "type": "object"
    },
    "TaskQueryParams": {
      "properties": {
        "id": {
          "title": "Id",
          "type": "string"
        },
        "historyLength": {
          "anyOf": [
            {
              "type": "integer",
              "minimum": 0
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "HistoryLength",
          "description": "Maximum number of historical messages to include in the response. If null or 0, history is omitted."
        },
        "metadata": {
          "anyOf": [
            {
              "additionalProperties": {},
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Metadata"
        }
      },
      "required": [
        "id"
      ],
      "title": "TaskQueryParams",
      "type": "object"
    },
    "TaskSendParams": {
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "description": "Unique identifier for the task."
        },
        "sessionId": {
          "title": "Sessionid",
          "type": "string",
          "description": "Identifier for the session this task belongs to. Can be used to group related tasks."
        },
        "message": {
          "$ref": "#/$defs/Message",
          "description": "The initial message initiating or continuing the task."
        },
        "acceptedOutputModes": {
          "items": {
            "type": "string"
          },
          "title": "AcceptedOutputModes",
          "description": "MIME types the requesting agent accepts for output parts.",
          "type": "array",
          "default": null
        },
        "pushNotification": {
          "anyOf": [
            {
              "$ref": "#/$defs/PushNotificationConfig"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Configuration for receiving push notifications about task updates."
        },
        "historyLength": {
          "anyOf": [
            {
              "type": "integer",
              "minimum": 0
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "HistoryLength",
          "description": "Maximum number of historical messages to include in the task response. If null or 0, history is omitted."
        },
        "metadata": {
          "anyOf": [
            {
              "additionalProperties": {},
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Metadata"
        }
      },
      "required": [
        "id",
        "message"
      ],
      "title": "TaskSendParams",
      "type": "object"
    },
    "TaskState": {
      "description": "An enumeration.",
      "enum": [
        "submitted",
        "working",
        "input-required",
        "completed",
        "canceled",
        "failed",
        "unknown"
      ],
      "title": "TaskState",
      "type": "string"
    },
    "TaskStatus": {
      "properties": {
        "state": {
          "$ref": "#/$defs/TaskState"
        },
        "message": {
          "anyOf": [
            {
              "$ref": "#/$defs/Message"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional message associated with this status update (e.g., agent response, error message)."
        },
        "timestamp": {
          "format": "date-time",
          "title": "Timestamp",
          "type": "string",
          "description": "Timestamp of when this status was recorded (ISO 8601 format)."
        }
      },
      "required": [
        "state",
        "timestamp"
      ],
      "title": "TaskStatus",
      "type": "object"
    },
    "TaskResubscriptionRequest": {
      "properties": {
        "jsonrpc": {
          "const": "2.0",
          "default": "2.0",
          "title": "Jsonrpc",
          "type": "string"
        },
        "id": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "title": "Id"
        },
        "method": {
          "const": "tasks/resubscribe",
          "default": "tasks/resubscribe",
          "title": "Method",
          "type": "string"
        },
        "params": {
          "$ref": "#/$defs/TaskIdParams"
        }
      },
      "required": [
        "jsonrpc",
        "method",
        "params"
      ],
      "title": "TaskResubscriptionRequest",
      "type": "object"
    },
    "TaskStatusUpdateEvent": {
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "description": "The ID of the task being updated."
        },
        "status": {
          "$ref": "#/$defs/TaskStatus"
        },
        "final": {
          "default": false,
          "title": "Final",
          "type": "boolean",
          "description": "Indicates if this is the terminal status update for the task."
        },
        "metadata": {
          "anyOf": [
            {
              "additionalProperties": {},
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Metadata"
        }
      },
      "required": [
        "id",
        "status"
      ],
      "title": "TaskStatusUpdateEvent",
      "type": "object"
    },
    "TaskArtifactUpdateEvent": {
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "description": "The ID of the task this artifact belongs to."
        },
        "artifact": {
          "$ref": "#/$defs/Artifact"
        },
        "metadata": {
          "anyOf": [
            {
              "additionalProperties": {},
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Metadata"
        }
      },
      "required": [
        "id",
        "artifact"
      ],
      "title": "TaskArtifactUpdateEvent",
      "type": "object"
    },
    "TextPart": {
      "properties": {
        "type": {
          "const": "text",
          "default": "text",
          "description": "Type of the part",
          "examples": [
            "text"
          ],
          "title": "Type",
          "type": "string"
        },
        "text": {
          "title": "Text",
          "type": "string"
        },
        "metadata": {
          "anyOf": [
            {
              "additionalProperties": {},
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Metadata"
        }
      },
      "required": [
        "type",
        "text"
      ],
      "title": "TextPart",
      "type": "object"
    },
    "UnsupportedOperationError": {
      "properties": {
        "code": {
          "const": -32004,
          "default": -32004,
          "description": "Error code",
          "examples": [
            -32004
          ],
          "title": "Code",
          "type": "integer"
        },
        "message": {
          "const": "This operation is not supported",
          "default": "This operation is not supported",
          "description": "A short description of the error",
          "examples": [
            "This operation is not supported"
          ],
          "title": "Message",
          "type": "string"
        },
        "data": {
          "const": null,
          "default": null,
          "title": "Data"
        }
      },
      "required": [
        "code",
        "message",
        "data"
      ],
      "title": "UnsupportedOperationError",
      "type": "object"
    },
    "ContentTypeNotSupportedError": {
      "properties": {
        "code": {
          "const": -32005,
          "default": -32005,
          "description": "Error code",
          "examples": [
            -32005
          ],
          "title": "Code",
          "type": "integer"
        },
        "message": {
          "const": "Incompatible content types",
          "default": "Incompatible content types",
          "description": "A short description of the error",
          "examples": [
            "Incompatible content types"
          ],
          "title": "Message",
          "type": "string"
        },
        "data": {
          "const": null,
          "default": null,
          "title": "Data"
        }
      },
      "required": [
        "code",
        "message",
        "data"
      ],
      "title": "ContentTypeNotSupportedError",
      "type": "object"
    },
    "KGSubject": {
      "title": "KGSubject",
      "description": "Represents the subject of a Knowledge Graph statement.",
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "description": "URI or unique identifier for the subject.",
          "type": "string"
        },
        "type": {
          "title": "Type",
          "description": "Optional URI representing the type of the subject.",
          "anyOf": [
            {
              "type": "string",
              "format": "uri"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "required": [
        "id"
      ]
    },
    "KGPredicate": {
      "title": "KGPredicate",
      "description": "Represents the predicate (relationship) of a Knowledge Graph statement.",
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "description": "URI representing the type of the predicate/relationship.",
          "type": "string",
          "format": "uri"
        }
      },
      "required": [
        "id"
      ]
    },
    "KGObject": {
      "title": "KGObject",
      "description": "Represents the object of a Knowledge Graph statement, which can be another node (resource) or a literal value. Enforces that either 'id' or 'value' must be present, but not both (logic implemented in application based on Pydantic validator).",
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "description": "URI or unique identifier if the object is a resource/node.",
          "anyOf": [
            {
              "type": "string",
              "format": "uri"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "value": {
          "title": "Value",
          "description": "The literal value if the object is an attribute (e.g., string, number, boolean).",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "number"
            },
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "type": {
          "title": "Type",
          "description": "Optional URI representing the type of the object node (if 'id' is present) or the literal datatype (if 'value' is present, e.g., xsd:string, xsd:integer).",
          "anyOf": [
            {
              "type": "string",
              "format": "uri"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "oneOf": [
        {
          "required": [
            "id"
          ]
        },
        {
          "required": [
            "value"
          ]
        }
      ]
    },
    "KGStatement": {
      "title": "KGStatement",
      "description": "Represents a single Knowledge Graph statement (triple).",
      "type": "object",
      "properties": {
        "subject": {
          "$ref": "#/$defs/KGSubject"
        },
        "predicate": {
          "$ref": "#/$defs/KGPredicate"
        },
        "object": {
          "$ref": "#/$defs/KGObject"
        },
        "graph": {
          "title": "Graph",
          "description": "Optional named graph URI this statement belongs to.",
          "anyOf": [
            {
              "type": "string",
              "format": "uri"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "certainty": {
          "title": "Certainty",
          "description": "Optional certainty score (0.0 to 1.0) associated with this statement.",
          "anyOf": [
            {
              "type": "number",
              "minimum": 0.0,
              "maximum": 1.0
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "provenance": {
          "title": "Provenance",
          "description": "Optional metadata about the source or origin of this statement (e.g., source agent ID, timestamp).",
          "anyOf": [
            {
              "type": "object",
              "additionalProperties": {}
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "required": [
        "subject",
        "predicate",
        "object"
      ]
    },
    "PatchOperationType": {
      "title": "PatchOperationType",
      "description": "Defines the type of operation in a knowledge graph patch.",
      "type": "string",
      "enum": [
        "add",
        "remove",
        "replace"
      ]
    },
    "KnowledgeGraphPatch": {
      "title": "KnowledgeGraphPatch",
      "description": "Represents a single proposed change (add, remove, replace) to a knowledge graph.",
      "type": "object",
      "properties": {
        "op": {
          "$ref": "#/$defs/PatchOperationType"
        },
        "statement": {
          "$ref": "#/$defs/KGStatement"
        }
      },
      "required": [
        "op",
        "statement"
      ]
    },
    "KnowledgeQueryParams": {
      "title": "KnowledgeQueryParams",
      "description": "Parameters for the knowledge/query method.",
      "type": "object",
      "properties": {
        "query": {
          "title": "Query",
          "description": "The query string (e.g., GraphQL query).",
          "type": "string"
        },
        "queryLanguage": {
          "title": "QueryLanguage",
          "description": "Specifies the language of the query.",
          "type": "string",
          "enum": [
            "graphql"
          ],
          "default": "graphql"
        },
        "variables": {
          "title": "Variables",
          "description": "Optional dictionary of variables for the query (common in GraphQL).",
          "anyOf": [
            {
              "type": "object",
              "additionalProperties": {}
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "taskId": {
          "title": "TaskId",
          "description": "Optional ID linking this query to a specific task.",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "sessionId": {
          "title": "SessionId",
          "description": "Optional ID linking this query to a specific session.",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "requiredCertainty": {
          "title": "RequiredCertainty",
          "description": "Optional minimum certainty score for results.",
          "anyOf": [
            {
              "type": "number",
              "minimum": 0.0,
              "maximum": 1.0
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "maxAgeSeconds": {
          "title": "MaxAgeSeconds",
          "description": "Optional maximum age (in seconds) for the data considered.",
          "anyOf": [
            {
              "type": "integer",
              "minimum": 0
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "metadata": {
          "title": "Metadata",
          "description": "Optional metadata, potentially including authentication tokens or alignment context.",
          "anyOf": [
            {
              "type": "object",
              "additionalProperties": {}
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "required": [
        "query",
        "queryLanguage"
      ]
    },
    "KnowledgeUpdateParams": {
      "title": "KnowledgeUpdateParams",
      "description": "Parameters for the knowledge/update method.",
      "type": "object",
      "properties": {
        "mutations": {
          "title": "Mutations",
          "description": "A list of patch operations to apply to the knowledge graph.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/KnowledgeGraphPatch"
          }
        },
        "taskId": {
          "title": "TaskId",
          "description": "Optional ID linking this update to a specific task.",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "sessionId": {
          "title": "SessionId",
          "description": "Optional ID linking this update to a specific session.",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "sourceAgentId": {
          "title": "SourceAgentId",
          "description": "Optional identifier of the agent proposing the update.",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "justification": {
          "title": "Justification",
          "description": "Optional textual justification for the proposed update.",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "metadata": {
          "title": "Metadata",
          "description": "Optional metadata, potentially including authentication tokens or alignment context.",
          "anyOf": [
            {
              "type": "object",
              "additionalProperties": {}
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "required": [
        "mutations"
      ]
    },
    "KnowledgeSubscribeParams": {
      "title": "KnowledgeSubscribeParams",
      "description": "Parameters for the knowledge/subscribe method.",
      "type": "object",
      "properties": {
        "subscriptionQuery": {
          "title": "SubscriptionQuery",
          "description": "The query string for the subscription (e.g., GraphQL subscription).",
          "type": "string"
        },
        "queryLanguage": {
          "title": "QueryLanguage",
          "description": "Specifies the language of the subscription query.",
          "type": "string",
          "enum": [
            "graphql"
          ],
          "default": "graphql"
        },
        "variables": {
          "title": "Variables",
          "description": "Optional dictionary of variables for the subscription query.",
          "anyOf": [
            {
              "type": "object",
              "additionalProperties": {}
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "taskId": {
          "title": "TaskId",
          "description": "Optional ID linking this subscription to a specific task.",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "sessionId": {
          "title": "SessionId",
          "description": "Optional ID linking this subscription to a specific session.",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "metadata": {
          "title": "Metadata",
          "description": "Optional metadata, potentially including authentication tokens or alignment context.",
          "anyOf": [
            {
              "type": "object",
              "additionalProperties": {}
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "required": [
        "subscriptionQuery",
        "queryLanguage"
      ]
    },
    "KnowledgeQueryRequest": {
      "title": "KnowledgeQueryRequest",
      "description": "Request to query an agent's knowledge graph.",
      "properties": {
        "jsonrpc": {
          "const": "2.0",
          "default": "2.0"
        },
        "id": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "const": "knowledge/query",
          "default": "knowledge/query"
        },
        "params": {
          "$ref": "#/$defs/KnowledgeQueryParams"
        }
      },
      "required": [
        "jsonrpc",
        "method",
        "params"
      ],
      "type": "object"
    },
    "KnowledgeUpdateRequest": {
      "title": "KnowledgeUpdateRequest",
      "description": "Request to propose updates to an agent's knowledge graph.",
      "properties": {
        "jsonrpc": {
          "const": "2.0",
          "default": "2.0"
        },
        "id": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "const": "knowledge/update",
          "default": "knowledge/update"
        },
        "params": {
          "$ref": "#/$defs/KnowledgeUpdateParams"
        }
      },
      "required": [
        "jsonrpc",
        "method",
        "params"
      ],
      "type": "object"
    },
    "KnowledgeSubscribeRequest": {
      "title": "KnowledgeSubscribeRequest",
      "description": "Request to subscribe to changes in an agent's knowledge graph.",
      "properties": {
        "jsonrpc": {
          "const": "2.0",
          "default": "2.0"
        },
        "id": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "method": {
          "const": "knowledge/subscribe",
          "default": "knowledge/subscribe"
        },
        "params": {
          "$ref": "#/$defs/KnowledgeSubscribeParams"
        }
      },
      "required": [
        "jsonrpc",
        "method",
        "params"
      ],
      "type": "object"
    },
    "KnowledgeQueryResponseResult": {
      "title": "KnowledgeQueryResponseResult",
      "description": "Result structure for a knowledge query.",
      "type": "object",
      "properties": {
        "data": {
          "title": "Data",
          "description": "The result data from the query execution, typically matching the structure requested in the GraphQL query (can be an object or array).",
          "anyOf": [
            {
              "type": "object",
              "additionalProperties": {}
            },
            {
              "type": "array",
              "items": {}
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "queryMetadata": {
          "title": "QueryMetadata",
          "description": "Optional metadata about the query execution (e.g., sources consulted, execution time, certainty aggregation).",
          "anyOf": [
            {
              "type": "object",
              "additionalProperties": {}
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      }
    },
    "KnowledgeQueryResponse": {
      "title": "KnowledgeQueryResponse",
      "description": "Response to a knowledge/query request.",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "const": "2.0",
          "default": "2.0"
        },
        "id": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "result": {
          "anyOf": [
            {
              "$ref": "#/$defs/KnowledgeQueryResponseResult"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "error": {
          "anyOf": [
            {
              "$ref": "#/$defs/JSONRPCError"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "required": [
        "jsonrpc"
      ]
    },
    "KnowledgeUpdateResponseResult": {
      "title": "KnowledgeUpdateResponseResult",
      "description": "Result structure for a knowledge update operation.",
      "type": "object",
      "properties": {
        "success": {
          "title": "Success",
          "description": "Indicates if the update operation was accepted and applied (at least provisionally).",
          "type": "boolean"
        },
        "statementsAffected": {
          "title": "StatementsAffected",
          "description": "Optional count of how many statements were added or removed.",
          "anyOf": [
            {
              "type": "integer",
              "minimum": 0
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "affectedIds": {
          "title": "AffectedIds",
          "description": "Optional list of URIs or identifiers of entities created or modified by the update.",
          "anyOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "verificationStatus": {
          "title": "VerificationStatus",
          "description": "Optional status regarding the verification of the update against alignment rules.",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "examples": [
            "Verified",
            "Pending Review",
            "Rejected - Constraint Violation"
          ]
        },
        "verificationDetails": {
          "title": "VerificationDetails",
          "description": "Optional details explaining the verification status.",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "required": [
        "success"
      ]
    },
    "KnowledgeUpdateResponse": {
      "title": "KnowledgeUpdateResponse",
      "description": "Response to a knowledge/update request.",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "const": "2.0",
          "default": "2.0"
        },
        "id": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "result": {
          "anyOf": [
            {
              "$ref": "#/$defs/KnowledgeUpdateResponseResult"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "error": {
          "anyOf": [
            {
              "$ref": "#/$defs/JSONRPCError"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "required": [
        "jsonrpc"
      ]
    },
    "KnowledgeGraphChangeEvent": {
      "title": "KnowledgeGraphChangeEvent",
      "description": "Represents a confirmed change event in the knowledge graph, streamed for subscriptions.",
      "type": "object",
      "properties": {
        "op": {
          "$ref": "#/$defs/PatchOperationType"
        },
        "statement": {
          "$ref": "#/$defs/KGStatement"
        },
        "changeId": {
          "title": "ChangeId",
          "description": "Unique identifier for this specific change event.",
          "type": "string",
          "format": "uuid"
        },
        "timestamp": {
          "title": "Timestamp",
          "description": "Timestamp when the change was confirmed (ISO 8601 format).",
          "type": "string",
          "format": "date-time"
        },
        "changeMetadata": {
          "title": "ChangeMetadata",
          "description": "Optional metadata about the confirmed change (e.g., who verified it, relation to a task).",
          "anyOf": [
            {
              "type": "object",
              "additionalProperties": {}
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "required": [
        "op",
        "statement",
        "changeId",
        "timestamp"
      ]
    },
    "KnowledgeSubscriptionEvent": {
      "title": "KnowledgeSubscriptionEvent",
      "description": "A single event message streamed as part of a knowledge/subscribe response.",
      "type": "object",
      "properties": {
        "jsonrpc": {
          "const": "2.0",
          "default": "2.0"
        },
        "id": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "description": "Corresponds to the ID of the original KnowledgeSubscribeRequest."
        },
        "result": {
          "anyOf": [
            {
              "$ref": "#/$defs/KnowledgeGraphChangeEvent"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "error": {
          "anyOf": [
            {
              "$ref": "#/$defs/JSONRPCError"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Errors can also be streamed if the subscription fails."
        }
      },
      "required": [
        "jsonrpc"
      ]
    },
    "KnowledgeQueryError": {
      "title": "KnowledgeQueryError",
      "description": "Error specific to knowledge query failures.",
      "type": "object",
      "properties": {
        "code": {
          "const": -32010,
          "default": -32010,
          "type": "integer"
        },
        "message": {
          "type": "string",
          "default": "Knowledge query failed"
        },
        "data": {
          "anyOf": [
            {},
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "KnowledgeUpdateError": {
      "title": "KnowledgeUpdateError",
      "description": "Error specific to knowledge update failures.",
      "type": "object",
      "properties": {
        "code": {
          "const": -32011,
          "default": -32011,
          "type": "integer"
        },
        "message": {
          "type": "string",
          "default": "Knowledge update failed (e.g., conflict, constraint violation)"
        },
        "data": {
          "anyOf": [
            {},
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "KnowledgeSubscriptionError": {
      "title": "KnowledgeSubscriptionError",
      "description": "Error specific to knowledge subscription failures.",
      "type": "object",
      "properties": {
        "code": {
          "const": -32012,
          "default": -32012,
          "type": "integer"
        },
        "message": {
          "type": "string",
          "default": "Knowledge subscription failed"
        },
        "data": {
          "anyOf": [
            {},
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "AlignmentViolationError": {
      "title": "AlignmentViolationError",
      "description": "Error indicating an operation violates alignment constraints.",
      "type": "object",
      "properties": {
        "code": {
          "const": -32013,
          "default": -32013,
          "type": "integer"
        },
        "message": {
          "type": "string",
          "default": "Operation violates alignment constraints"
        },
        "data": {
          "anyOf": [
            {},
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "May contain details about the specific constraint violated."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "A2ARequest": {
      "oneOf": [
        {
          "$ref": "#/$defs/SendTaskRequest"
        },
        {
          "$ref": "#/$defs/GetTaskRequest"
        },
        {
          "$ref": "#/$defs/CancelTaskRequest"
        },
        {
          "$ref": "#/$defs/SetTaskPushNotificationRequest"
        },
        {
          "$ref": "#/$defs/GetTaskPushNotificationRequest"
        },
        {
          "$ref": "#/$defs/TaskResubscriptionRequest"
        },
        {
          "$ref": "#/$defs/SendTaskStreamingRequest"
        },
        {
          "$ref": "#/$defs/KnowledgeQueryRequest"
        },
        {
          "$ref": "#/$defs/KnowledgeUpdateRequest"
        },
        {
          "$ref": "#/$defs/KnowledgeSubscribeRequest"
        }
      ],
      "title": "A2ARequest",
      "description": "Represents any valid A2A request message. Use 'method' field to discriminate.",
      "discriminator": {
        "propertyName": "method"
      }
    }
  },
  "oneOf": [
    {
      "$ref": "#/$defs/A2ARequest"
    },
    {
      "$ref": "#/$defs/JSONRPCResponse"
    }
  ],
  "description": "Top-level schema defining either an A2A request or response."
}